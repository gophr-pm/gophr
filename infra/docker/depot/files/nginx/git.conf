
server {
    listen [::]:80;
    listen 0.0.0.0:80;
    server_name localhost;

    access_log /var/log/nginx/public_access.log main;
    error_log /var/log/nginx/public_error.log warn;

    root /var/www/git;

    client_max_body_size 0;

    # public read only requests
    location ~ ^.*\.git/(info/refs|git-(upload)-pack)$  {
        root /repos;
        fastcgi_pass unix:/tmp/cgi.sock;
        fastcgi_param SCRIPT_FILENAME   /usr/lib/git-core/git-http-backend;
        fastcgi_param PATH_INFO         $uri;
        fastcgi_param GIT_PROJECT_ROOT  /var/lib/git;
        fastcgi_param GIT_HTTP_EXPORT_ALL "";
        fastcgi_param REMOTE_USER $remote_user;
        include fastcgi_params;
    }
}

server {
    listen [::]:3000;
    listen 0.0.0.0:3000;
    server_name localhost;

    access_log /var/log/nginx/internal_access.log main;
    error_log /var/log/nginx/internal_error.log warn;

    root /var/www/git;

    client_max_body_size 0;

    # For internal use only; read/write requests to depot repos
    location ~ ^.*\.git/(HEAD|info/refs|objects/info/.*|git-(upload|receive)-pack)$ {
        root /repos;
        fastcgi_pass unix:/tmp/cgi.sock;
        fastcgi_param SCRIPT_FILENAME   /usr/lib/git-core/git-http-backend;
        fastcgi_param PATH_INFO         $uri;
        fastcgi_param GIT_PROJECT_ROOT  /repos;
        fastcgi_param GIT_HTTP_EXPORT_ALL "";
        fastcgi_param REMOTE_USER $remote_user;
        include fastcgi_params;
    }

    # Send anything else to gitweb if it's not a real file
    try_files $uri @gitweb;
    location @gitweb {
        fastcgi_pass unix:/tmp/cgi.sock;
        fastcgi_param SCRIPT_FILENAME   /var/www/git/gitweb.cgi;
        fastcgi_param PATH_INFO         $uri;
        fastcgi_param GITWEB_CONFIG     /etc/gitweb.conf;
        include fastcgi_params;
    }
}
