#! /bin/bash

# Get base directories
scripts_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
env_dir="$( dirname $scripts_dir )"

# Environment variable init
K8S_VERSION="1.2.0"
NEW_LINE_CHAR="
"

# Create the gophr docker machine
docker-machine create \
    -d virtualbox \
    --virtualbox-memory 2048 \
    --virtualbox-cpu-count 2 \
    gophr

# Bind docker to the gophr docker machine
eval $(docker-machine env gophr)

# Patch the hosts file
local_host_alias="gophr.dev"
hosts_file_path="/etc/hosts"
docker_machine_ip=$(docker-machine ip gophr)
gophr_dev_host=$(sudo grep -E "^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\s+${local_host_alias}$" --color=never ${hosts_file_path})

if [[ -z "$conx_dev_host" ]]; then
  # This means that there is conx dev host yet, so we must append it
  echo "${NEW_LINE_CHAR}${docker_machine_ip} ${local_host_alias}" | sudo tee -a $hosts_file_path
else
  # This means that there is a conx dev host, so we must replace it
  sudo sed -E -e "s/${conx_dev_host}/${default_machine_ip} ${local_host_alias}/" -i "" $hosts_file_path
fi

# Setup kubernetes
docker run \
    --volume=/:/rootfs:ro \
    --volume=/sys:/sys:ro \
    --volume=/var/lib/docker/:/var/lib/docker:rw \
    --volume=/var/lib/kubelet/:/var/lib/kubelet:rw \
    --volume=/var/run:/var/run:rw \
    --net=host \
    --pid=host \
    --privileged=true \
    -d \
    gcr.io/google_containers/hyperkube-amd64:v${K8S_VERSION} \
    /hyperkube kubelet \
        --containerized \
        --hostname-override="127.0.0.1" \
        --address="0.0.0.0" \
        --api-servers=http://localhost:8080 \
        --config=/etc/kubernetes/manifests \
        --cluster-dns=10.0.0.10 \
        --cluster-domain=cluster.local \
        --allow-privileged=true --v=2

# Declare ownership of /usr/local/bin for installation of kubernetes cli
sudo chown -R $USER /usr/local/bin

# Download and install kubernetes
wget http://storage.googleapis.com/kubernetes-release/release/v${K8S_VERSION}/bin/darwin/amd64/kubectl
chmod 755 kubectl
mv kubectl /usr/local/bin/kubectl

# Configure the kubernetes cli
kube_cluster_name="gophr-dev"
kubectl config set-cluster ${kube_cluster_name} --server="http://$docker_machine_ip:8080"
kubectl config set-context ${kube_cluster_name} --cluster="$kube_cluster_name"
kubectl config use-context ${kube_cluster_name}

# Install docker rsync
brew tap synack/docker
brew install docker-rsync
